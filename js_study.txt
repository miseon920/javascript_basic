*변수
let - 선언과 할당이 가능함
ex)
let a;
a = "미선";

#consst
const(상수) - 변하지않는 수, 선언과 할당이 불가능함
const a= "미선";  //선언시에 할당 해야함;
const test; <- 에러

1.선언 시에 초기화를 하지 않으면 에러가 발생
2.따라서 같은 값으로 정의할 수 없음!
3.함수를 담을 수 있음 - 함수표현식
4.상수 식별자의 구문은 변수 식별자와 같다.
5. 문자, 밑줄이나 달러 기호 ($) 로 시작해야 하고 문자, 숫자나 밑줄을 포함할 수 있습니다.
https://eblee-repo.tistory.com/37

#자료형※
[] - 배열
{} - 객체
() - 함수


undefiend : 변수는 존재하나, 어떠한 값으로도 할당되지 않아 자료형이 정해지지(undefined) 않은 상태입니다.
null : 변수는 존재하나, null 로 (값이) 할당된 상태. 즉 null은 자료형이 정해진(defined) 상태입니다.

자바스크립트에서 숫자 1과 문자 '1'을 비교 할 때 == 연산자를 사용하면 true가 나오지만, 
타입까지 엄격히 검사하는 === 연산자를 사용하면 false가 나오게 됩니다.


#객체만들기
const myCar = new Object(); //객체 생성
myCar.make = "Ford";
myCar.model = "Mustang";
myCar.year = 1969;

↓아래 객체로 표기 //{} 사용하여 만듬

const myCar = {
  make: 'Ford',
  model: 'Mustang',
  year: 1969
};

객체에 할당되지 않은 속성은undefined. (null이 아님)

myCar.color; // undefined - myCar 변수는 존재하나 color의 값이 할당되지 않았기 때문

↓객체 속성은 대괄호 표기법(속성 접근자)을 사용해 접근(연관배열이라고 부름)

myCar['make'] = 'Ford';
myCar['model'] = 'Mustang';
myCar['year'] = 1969;

